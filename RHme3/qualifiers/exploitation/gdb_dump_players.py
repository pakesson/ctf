import gdb

int_pointer_type = gdb.lookup_type('int').pointer()
char_pointer_type = gdb.lookup_type('char').pointer()
void_pointer_type = gdb.lookup_type('void').pointer()

def print_player(player_addr):
    print(' '*4 + 'A/D/S/P: {}, {}, {}, {}'.format(
        player_addr.cast(int_pointer_type).referenced_value(),
        gdb.Value(int(player_addr)+0x4).cast(int_pointer_type).referenced_value(),
        gdb.Value(int(player_addr)+0x8).cast(int_pointer_type).referenced_value(),
        gdb.Value(int(player_addr)+0xc).cast(int_pointer_type).referenced_value()))

    name_addr = gdb.Value(int(player_addr)+0x10)
    name_ptr = name_addr.cast(char_pointer_type.pointer()).dereference()
    name = name_ptr.cast(char_pointer_type).string('ascii')
    print(' '*4 + 'Name (*{:#x} = {:#x}): {}'.format(int(name_addr), int(name_ptr),name))

class DumpPlayers(gdb.Command):
    def __init__(self):
        super(DumpPlayers, self).__init__('dump-players', gdb.COMMAND_DATA)

    def invoke(self, arg, from_tty):
        inferior = gdb.selected_inferior()

        players_addr = gdb.parse_and_eval("&players")
        selected_addr= gdb.parse_and_eval("&selected")

        for x in range(11):
            player_addr = gdb.Value(int(players_addr)+x*0x8).cast(int_pointer_type)[0]
            if player_addr == 0:
                continue

            print('Player {}: {} = {:#x}'.format(x, player_addr.address, int(player_addr)))
            print_player(player_addr)

        print('Selected player: {} = {:#x}'.format(selected_addr, int(selected_addr[0])))
        if selected_addr[0] != 0:
            print_player(selected_addr[0])

DumpPlayers()